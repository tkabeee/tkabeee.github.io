!function(t){var e={};function s(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,s),r.l=!0,r.exports}s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);class i extends Phaser.State{preload(){}create(){this.game.state.start("Preloader",!0,!1)}render(){}}class r extends Phaser.State{preload(){this.load.image("unit","assets/phaser/unit.png"),this.load.image("block","assets/phaser/block.png"),this.load.image("bullet","assets/phaser/bullet.png"),this.load.spritesheet("kaboom","assets/phaser/explosion.png",64,64,23)}create(){this.game.state.start("Build",!0,!1)}}class o{}o.numTotal=8;class d{}d.angle=-90,d.direction=!0,d.point=new Phaser.Point,d.maxVelocity=200,d.currentSpeed=0,d.deceleration=4;class n{constructor(t){this.sprite=t,this.sprite.anchor.setTo(.5,.5),this.sprite.x=250,this.sprite.y=400;const e=new Phaser.Rectangle(0,32,32,32);this.sprite.crop(e,!1),this.sprite.body.drag.set(.2),this.sprite.body.maxVelocity.setTo(400,400),this.sprite.body.collideWorldBounds=!0,this.sprite.bringToTop(),this.sprite.angle=d.angle,this.sprite.body.direction=d.direction,this.sprite.body.point=new Phaser.Point,this.sprite.body.maxVelocity=d.maxVelocity,this.sprite.body.currentSpeed=d.currentSpeed,this.sprite.body.deceleration=d.deceleration}goReady(){this.sprite.body.currentSpeed>0?this.sprite.body.maxVelocity%2<this.sprite.body.currentSpeed?this.sprite.body.currentSpeed-=3*this.sprite.body.deceleration:this.sprite.body.currentSpeed-=this.sprite.body.deceleration:(this.sprite.body.currentSpeed=0,this.sprite.body.direction=!this.sprite.body.direction)}goFront(){console.log(!this.sprite.body.direction),this.sprite.body.direction?(this.sprite.body.angle=this.sprite.angle,this.sprite.body.currentSpeed<this.sprite.body.maxVelocity?this.sprite.body.currentSpeed+=this.sprite.body.deceleration:this.sprite.body.currentSpeed=this.sprite.body.maxVelocity):(console.log(!this.sprite.angle),console.log(!this.sprite.body.angle),this.sprite.body.angle=this.sprite.angle-180),this.sprite.body.point=this.sprite.body.velocity.rotate(0,0,this.sprite.body.angle,!0,this.sprite.body.currentSpeed)}goBack(){this.sprite.body.direction?this.sprite.body.angle=this.sprite.angle:(this.sprite.body.angle=this.sprite.angle-180,this.sprite.body.currentSpeed<this.sprite.body.maxVelocity?this.sprite.body.currentSpeed+=this.sprite.body.deceleration:this.sprite.body.currentSpeed=this.sprite.body.maxVelocity),this.sprite.body.point=this.sprite.body.velocity.rotate(0,0,this.sprite.body.angle,!0,this.sprite.body.currentSpeed)}rotateRight(){this.sprite.body.angle+=4,this.sprite.body.currentSpeed>0&&(this.sprite.body.direction||(this.sprite.body.angle=this.sprite.body.angle-180),this.sprite.body.velocity.rotate(0,0,this.sprite.body.angle,!0,this.sprite.body.currentSpeed))}rotateLeft(){this.sprite.body.angle-=4,this.sprite.body.currentSpeed>0&&(this.sprite.body.direction||(this.sprite.body.angle=this.sprite.body.angle-180),this.sprite.body.body.velocity.rotate(0,0,this.sprite.body.angle,!0,this.sprite.body.currentSpeed))}fire(){}}class a{constructor(t){this.health=3,this.alive=!0,this.sprite=t,this.sprite.anchor.set(.5),this.sprite.body.immovable=!0,this.sprite.body.collideWorldBounds=!0,this.sprite.body.bounce.setTo(0,0)}damage(){return this.health-=1,this.health<=0&&(console.log("kill!!"),this.alive=!1,this.sprite.kill(),!0)}}class h extends Phaser.State{preload(){}create(){this.world.setBounds(0,0,600,500);const t=this.game.add.sprite(0,0,"unit");this.game.physics.enable(t,Phaser.Physics.ARCADE),this.unit=new n(t);const e=[];let s=o.numTotal;for(;s>0;){const t=this.game.add.sprite(this.world.randomX,this.world.randomY,"enemy","block");this.game.physics.enable(t,Phaser.Physics.ARCADE);let i=new a(t);e.push(i),s--}this.cursors=this.game.input.keyboard.createCursorKeys();this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR)}update(){this.cursors.left.isDown,this.cursors.right.isDown,this.cursors.up.isDown&&this.unit.goFront(),this.cursors.down.isDown&&this.unit.goBack()}}window.onload=(()=>{new class extends Phaser.Game{constructor(){super(800,600,Phaser.AUTO,"field",null),this.state.add("Boot",i,!1),this.state.add("Preloader",r,!1),this.state.add("Build",h,!1),this.state.start("Boot")}}})}]);