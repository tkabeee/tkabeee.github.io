!function(e){var t={};function s(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=e,s.c=t,s.d=function(e,t,r){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);class r extends Phaser.State{preload(){}create(){this.game.state.start("Preloader",!0,!1)}render(){}}class i extends Phaser.State{preload(){this.load.image("unit","assets/phaser/unit.png"),this.load.image("block","assets/phaser/block.png"),this.load.image("bullet","assets/phaser/bullet.png"),this.load.spritesheet("kaboom","assets/phaser/explosion.png",64,64,23)}create(){this.game.state.start("Build",!0,!1)}}class a{}a.numTotal=8;class o{}o.angle=-90,o.direction=!0,o.point=new Phaser.Point,o.maxVelocity=200,o.currentSpeed=0,o.deceleration=4;class n{constructor(e){this.sprite=e,this.sprite.anchor.setTo(.5,.5),this.sprite.x=250,this.sprite.y=400;const t=new Phaser.Rectangle(0,32,32,32);this.sprite.crop(t,!1),this.sprite.body.drag.set(.2),this.sprite.body.maxVelocity.setTo(400,400),this.sprite.body.collideWorldBounds=!0,this.sprite.bringToTop(),this.sprite.angle=o.angle}}class l{constructor(e){this.health=3,this.alive=!0,this.sprite=e,this.sprite.anchor.set(.5),this.sprite.body.immovable=!0,this.sprite.body.collideWorldBounds=!0,this.sprite.body.bounce.setTo(0,0)}damage(){return this.health-=1,this.health<=0&&(console.log("kill!!"),this.alive=!1,this.sprite.kill(),!0)}}class h extends Phaser.State{preload(){}create(){this.world.setBounds(0,0,600,500);const e=this.game.add.sprite(0,0,"unit");this.game.physics.enable(e,Phaser.Physics.ARCADE);new n(e);const t=[];let s=a.numTotal;for(;s>0;){const e=this.game.add.sprite(this.world.randomX,this.world.randomY,"enemy","block");this.game.physics.enable(e,Phaser.Physics.ARCADE);let r=new l(e);t.push(r),s--}}}window.onload=(()=>{new class extends Phaser.Game{constructor(){super(800,600,Phaser.AUTO,"field",null),this.state.add("Boot",r,!1),this.state.add("Preloader",i,!1),this.state.add("Build",h,!1),this.state.start("Boot")}}})}]);